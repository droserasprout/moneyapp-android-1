package com.cactusteam.money.data.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.cactusteam.money.data.dao.Account;
import com.cactusteam.money.data.dao.Category;
import com.cactusteam.money.data.dao.Subcategory;
import com.cactusteam.money.data.dao.Transaction;
import com.cactusteam.money.data.dao.Tag;
import com.cactusteam.money.data.dao.TransactionTag;
import com.cactusteam.money.data.dao.CurrencyRate;
import com.cactusteam.money.data.dao.BudgetPlan;
import com.cactusteam.money.data.dao.BudgetPlanDependency;
import com.cactusteam.money.data.dao.Debt;
import com.cactusteam.money.data.dao.DebtNote;
import com.cactusteam.money.data.dao.TransactionPattern;
import com.cactusteam.money.data.dao.PatternTag;
import com.cactusteam.money.data.dao.Note;
import com.cactusteam.money.data.dao.SyncLog;
import com.cactusteam.money.data.dao.Trash;
import com.cactusteam.money.data.dao.SyncLock;

import com.cactusteam.money.data.dao.AccountDao;
import com.cactusteam.money.data.dao.CategoryDao;
import com.cactusteam.money.data.dao.SubcategoryDao;
import com.cactusteam.money.data.dao.TransactionDao;
import com.cactusteam.money.data.dao.TagDao;
import com.cactusteam.money.data.dao.TransactionTagDao;
import com.cactusteam.money.data.dao.CurrencyRateDao;
import com.cactusteam.money.data.dao.BudgetPlanDao;
import com.cactusteam.money.data.dao.BudgetPlanDependencyDao;
import com.cactusteam.money.data.dao.DebtDao;
import com.cactusteam.money.data.dao.DebtNoteDao;
import com.cactusteam.money.data.dao.TransactionPatternDao;
import com.cactusteam.money.data.dao.PatternTagDao;
import com.cactusteam.money.data.dao.NoteDao;
import com.cactusteam.money.data.dao.SyncLogDao;
import com.cactusteam.money.data.dao.TrashDao;
import com.cactusteam.money.data.dao.SyncLockDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig subcategoryDaoConfig;
    private final DaoConfig transactionDaoConfig;
    private final DaoConfig tagDaoConfig;
    private final DaoConfig transactionTagDaoConfig;
    private final DaoConfig currencyRateDaoConfig;
    private final DaoConfig budgetPlanDaoConfig;
    private final DaoConfig budgetPlanDependencyDaoConfig;
    private final DaoConfig debtDaoConfig;
    private final DaoConfig debtNoteDaoConfig;
    private final DaoConfig transactionPatternDaoConfig;
    private final DaoConfig patternTagDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig syncLogDaoConfig;
    private final DaoConfig trashDaoConfig;
    private final DaoConfig syncLockDaoConfig;

    private final AccountDao accountDao;
    private final CategoryDao categoryDao;
    private final SubcategoryDao subcategoryDao;
    private final TransactionDao transactionDao;
    private final TagDao tagDao;
    private final TransactionTagDao transactionTagDao;
    private final CurrencyRateDao currencyRateDao;
    private final BudgetPlanDao budgetPlanDao;
    private final BudgetPlanDependencyDao budgetPlanDependencyDao;
    private final DebtDao debtDao;
    private final DebtNoteDao debtNoteDao;
    private final TransactionPatternDao transactionPatternDao;
    private final PatternTagDao patternTagDao;
    private final NoteDao noteDao;
    private final SyncLogDao syncLogDao;
    private final TrashDao trashDao;
    private final SyncLockDao syncLockDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountDaoConfig = daoConfigMap.get(AccountDao.class).clone();
        accountDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        subcategoryDaoConfig = daoConfigMap.get(SubcategoryDao.class).clone();
        subcategoryDaoConfig.initIdentityScope(type);

        transactionDaoConfig = daoConfigMap.get(TransactionDao.class).clone();
        transactionDaoConfig.initIdentityScope(type);

        tagDaoConfig = daoConfigMap.get(TagDao.class).clone();
        tagDaoConfig.initIdentityScope(type);

        transactionTagDaoConfig = daoConfigMap.get(TransactionTagDao.class).clone();
        transactionTagDaoConfig.initIdentityScope(type);

        currencyRateDaoConfig = daoConfigMap.get(CurrencyRateDao.class).clone();
        currencyRateDaoConfig.initIdentityScope(type);

        budgetPlanDaoConfig = daoConfigMap.get(BudgetPlanDao.class).clone();
        budgetPlanDaoConfig.initIdentityScope(type);

        budgetPlanDependencyDaoConfig = daoConfigMap.get(BudgetPlanDependencyDao.class).clone();
        budgetPlanDependencyDaoConfig.initIdentityScope(type);

        debtDaoConfig = daoConfigMap.get(DebtDao.class).clone();
        debtDaoConfig.initIdentityScope(type);

        debtNoteDaoConfig = daoConfigMap.get(DebtNoteDao.class).clone();
        debtNoteDaoConfig.initIdentityScope(type);

        transactionPatternDaoConfig = daoConfigMap.get(TransactionPatternDao.class).clone();
        transactionPatternDaoConfig.initIdentityScope(type);

        patternTagDaoConfig = daoConfigMap.get(PatternTagDao.class).clone();
        patternTagDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        syncLogDaoConfig = daoConfigMap.get(SyncLogDao.class).clone();
        syncLogDaoConfig.initIdentityScope(type);

        trashDaoConfig = daoConfigMap.get(TrashDao.class).clone();
        trashDaoConfig.initIdentityScope(type);

        syncLockDaoConfig = daoConfigMap.get(SyncLockDao.class).clone();
        syncLockDaoConfig.initIdentityScope(type);

        accountDao = new AccountDao(accountDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        subcategoryDao = new SubcategoryDao(subcategoryDaoConfig, this);
        transactionDao = new TransactionDao(transactionDaoConfig, this);
        tagDao = new TagDao(tagDaoConfig, this);
        transactionTagDao = new TransactionTagDao(transactionTagDaoConfig, this);
        currencyRateDao = new CurrencyRateDao(currencyRateDaoConfig, this);
        budgetPlanDao = new BudgetPlanDao(budgetPlanDaoConfig, this);
        budgetPlanDependencyDao = new BudgetPlanDependencyDao(budgetPlanDependencyDaoConfig, this);
        debtDao = new DebtDao(debtDaoConfig, this);
        debtNoteDao = new DebtNoteDao(debtNoteDaoConfig, this);
        transactionPatternDao = new TransactionPatternDao(transactionPatternDaoConfig, this);
        patternTagDao = new PatternTagDao(patternTagDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);
        syncLogDao = new SyncLogDao(syncLogDaoConfig, this);
        trashDao = new TrashDao(trashDaoConfig, this);
        syncLockDao = new SyncLockDao(syncLockDaoConfig, this);

        registerDao(Account.class, accountDao);
        registerDao(Category.class, categoryDao);
        registerDao(Subcategory.class, subcategoryDao);
        registerDao(Transaction.class, transactionDao);
        registerDao(Tag.class, tagDao);
        registerDao(TransactionTag.class, transactionTagDao);
        registerDao(CurrencyRate.class, currencyRateDao);
        registerDao(BudgetPlan.class, budgetPlanDao);
        registerDao(BudgetPlanDependency.class, budgetPlanDependencyDao);
        registerDao(Debt.class, debtDao);
        registerDao(DebtNote.class, debtNoteDao);
        registerDao(TransactionPattern.class, transactionPatternDao);
        registerDao(PatternTag.class, patternTagDao);
        registerDao(Note.class, noteDao);
        registerDao(SyncLog.class, syncLogDao);
        registerDao(Trash.class, trashDao);
        registerDao(SyncLock.class, syncLockDao);
    }
    
    public void clear() {
        accountDaoConfig.getIdentityScope().clear();
        categoryDaoConfig.getIdentityScope().clear();
        subcategoryDaoConfig.getIdentityScope().clear();
        transactionDaoConfig.getIdentityScope().clear();
        tagDaoConfig.getIdentityScope().clear();
        transactionTagDaoConfig.getIdentityScope().clear();
        currencyRateDaoConfig.getIdentityScope().clear();
        budgetPlanDaoConfig.getIdentityScope().clear();
        budgetPlanDependencyDaoConfig.getIdentityScope().clear();
        debtDaoConfig.getIdentityScope().clear();
        debtNoteDaoConfig.getIdentityScope().clear();
        transactionPatternDaoConfig.getIdentityScope().clear();
        patternTagDaoConfig.getIdentityScope().clear();
        noteDaoConfig.getIdentityScope().clear();
        syncLogDaoConfig.getIdentityScope().clear();
        trashDaoConfig.getIdentityScope().clear();
        syncLockDaoConfig.getIdentityScope().clear();
    }

    public AccountDao getAccountDao() {
        return accountDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public SubcategoryDao getSubcategoryDao() {
        return subcategoryDao;
    }

    public TransactionDao getTransactionDao() {
        return transactionDao;
    }

    public TagDao getTagDao() {
        return tagDao;
    }

    public TransactionTagDao getTransactionTagDao() {
        return transactionTagDao;
    }

    public CurrencyRateDao getCurrencyRateDao() {
        return currencyRateDao;
    }

    public BudgetPlanDao getBudgetPlanDao() {
        return budgetPlanDao;
    }

    public BudgetPlanDependencyDao getBudgetPlanDependencyDao() {
        return budgetPlanDependencyDao;
    }

    public DebtDao getDebtDao() {
        return debtDao;
    }

    public DebtNoteDao getDebtNoteDao() {
        return debtNoteDao;
    }

    public TransactionPatternDao getTransactionPatternDao() {
        return transactionPatternDao;
    }

    public PatternTagDao getPatternTagDao() {
        return patternTagDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public SyncLogDao getSyncLogDao() {
        return syncLogDao;
    }

    public TrashDao getTrashDao() {
        return trashDao;
    }

    public SyncLockDao getSyncLockDao() {
        return syncLockDao;
    }

}
