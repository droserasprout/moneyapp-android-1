package com.cactusteam.money.data.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import android.os.Parcel;
// KEEP INCLUDES END
/**
 * Entity mapped to table "CURRENCY_RATE".
 */
public class CurrencyRate implements android.os.Parcelable {

    private Long id;
    /** Not-null value. */
    private java.util.Date date;
    /** Not-null value. */
    private String sourceCurrencyCode;
    /** Not-null value. */
    private String destCurrencyCode;
    private double rate;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public CurrencyRate() {
    }

    public CurrencyRate(Long id) {
        this.id = id;
    }

    public CurrencyRate(Long id, java.util.Date date, String sourceCurrencyCode, String destCurrencyCode, double rate) {
        this.id = id;
        this.date = date;
        this.sourceCurrencyCode = sourceCurrencyCode;
        this.destCurrencyCode = destCurrencyCode;
        this.rate = rate;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /** Not-null value. */
    public java.util.Date getDate() {
        return date;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setDate(java.util.Date date) {
        this.date = date;
    }

    /** Not-null value. */
    public String getSourceCurrencyCode() {
        return sourceCurrencyCode;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setSourceCurrencyCode(String sourceCurrencyCode) {
        this.sourceCurrencyCode = sourceCurrencyCode;
    }

    /** Not-null value. */
    public String getDestCurrencyCode() {
        return destCurrencyCode;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setDestCurrencyCode(String destCurrencyCode) {
        this.destCurrencyCode = destCurrencyCode;
    }

    public double getRate() {
        return rate;
    }

    public void setRate(double rate) {
        this.rate = rate;
    }

    // KEEP METHODS - put your custom methods here
    public double convertTo(double amount, String toCurrencyCode) {
        if (toCurrencyCode.equals(sourceCurrencyCode)) {
            // from dest to source
            return com.cactusteam.money.data.DataUtils.INSTANCE.round(amount / rate, 2);
        } else {
            // from source to dest
            return amount * rate;
        }
    }

    public boolean same(String currencyCode1, String currencyCode2) {
        return (currencyCode1.equals(sourceCurrencyCode) && currencyCode2.equals(destCurrencyCode))
                || (currencyCode2.equals(sourceCurrencyCode) && currencyCode1.equals(destCurrencyCode));
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel parcel, int i) {
        parcel.writeString(sourceCurrencyCode);
        parcel.writeString(destCurrencyCode);
        parcel.writeDouble(rate);
    }

    protected CurrencyRate(Parcel in) {
        sourceCurrencyCode = in.readString();
        destCurrencyCode = in.readString();
        rate = in.readDouble();
    }

    public static final Creator<CurrencyRate> CREATOR = new Creator<CurrencyRate>() {
        @Override
        public CurrencyRate createFromParcel(Parcel in) {
            return new CurrencyRate(in);
        }

        @Override
        public CurrencyRate[] newArray(int size) {
            return new CurrencyRate[size];
        }
    };
    // KEEP METHODS END

}
