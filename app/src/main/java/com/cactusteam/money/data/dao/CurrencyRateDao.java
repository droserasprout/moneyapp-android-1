package com.cactusteam.money.data.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.cactusteam.money.data.dao.CurrencyRate;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "CURRENCY_RATE".
*/
public class CurrencyRateDao extends AbstractDao<CurrencyRate, Long> {

    public static final String TABLENAME = "CURRENCY_RATE";

    /**
     * Properties of entity CurrencyRate.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Date = new Property(1, java.util.Date.class, "date", false, "DATE");
        public final static Property SourceCurrencyCode = new Property(2, String.class, "sourceCurrencyCode", false, "SOURCE_CURRENCY_CODE");
        public final static Property DestCurrencyCode = new Property(3, String.class, "destCurrencyCode", false, "DEST_CURRENCY_CODE");
        public final static Property Rate = new Property(4, double.class, "rate", false, "RATE");
    };


    public CurrencyRateDao(DaoConfig config) {
        super(config);
    }
    
    public CurrencyRateDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CURRENCY_RATE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"DATE\" INTEGER NOT NULL ," + // 1: date
                "\"SOURCE_CURRENCY_CODE\" TEXT NOT NULL ," + // 2: sourceCurrencyCode
                "\"DEST_CURRENCY_CODE\" TEXT NOT NULL ," + // 3: destCurrencyCode
                "\"RATE\" REAL NOT NULL );"); // 4: rate
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CURRENCY_RATE\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, CurrencyRate entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getDate().getTime());
        stmt.bindString(3, entity.getSourceCurrencyCode());
        stmt.bindString(4, entity.getDestCurrencyCode());
        stmt.bindDouble(5, entity.getRate());
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public CurrencyRate readEntity(Cursor cursor, int offset) {
        CurrencyRate entity = new CurrencyRate( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            new java.util.Date(cursor.getLong(offset + 1)), // date
            cursor.getString(offset + 2), // sourceCurrencyCode
            cursor.getString(offset + 3), // destCurrencyCode
            cursor.getDouble(offset + 4) // rate
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, CurrencyRate entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setDate(new java.util.Date(cursor.getLong(offset + 1)));
        entity.setSourceCurrencyCode(cursor.getString(offset + 2));
        entity.setDestCurrencyCode(cursor.getString(offset + 3));
        entity.setRate(cursor.getDouble(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(CurrencyRate entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(CurrencyRate entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
